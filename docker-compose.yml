version: "3.9"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
      
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  kafka-viewer:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    environment:
        KAFKA_CLUSTERS_0_NAME: local
        KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
        KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    ports:
      - "9000:8080"

  postgres:
    image: postgres:latest
    env_file:
      - ./.env
    ports:
      - "5433:5432"
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql


#   airflow:
#     image: apache/airflow:2.7.0-python3.9
#     environment:
#       AIRFLOW__CORE__EXECUTOR: LocalExecutor
#       AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://user:password@postgres:5432/mydb
#     volumes:
#       - ./dags:/opt/airflow/dags
#       - ./logs:/opt/airflow/logs
#     ports:
#       - "8080:8080"

#   jupyter:
#     image: jupyter/scipy-notebook:latest
#     ports:
#       - "8888:8888"
#     volumes:
#       - ./notebooks:/home/jovyan/work

#   grafana:
#     image: grafana/grafana:latest
#     ports:
#       - "3000:3000"
#     volumes:
#       - grafana-data:/var/lib/grafana

#   kibana:
#     image: docker.elastic.co/kibana/kibana:8.17.0
#     ports:
#       - "5601:5601"
#     environment:
#       ELASTICSEARCH_HOSTS: http://localhost:9200

# volumes:
#   grafana-data:
